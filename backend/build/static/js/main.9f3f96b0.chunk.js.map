{"version":3,"sources":["actions/types.js","actions/auth.js","containers/Login.js","containers/Home.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","containers/TestingContainer.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","reset_password_confirm","uid","token","new_password","re_new_password","body","JSON","stringify","post","connect","state","isAuthenticated","auth","login","email","password","useState","formData","setFormData","onChange","e","target","name","value","to","className","style","borderRadius","color","method","onSubmit","preventDefault","for","placeholder","autocomplete","required","minLength","title","width","margin","backgroundColor","Home","charset","http-equiv","content","class","role","href","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","verify","match","verified","setVerified","marginTop","onClick","params","reset_password","requestSent","setRequestSent","id","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","checkAuthenticated","code","props","useEffect","padding","children","initialState","access","refresh","IsAuthenticated","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f3f96b0.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\r\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const facebookAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '' \r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='card container mt-5 col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5\" style={{color: 'darkgreen'}} />\r\n            </div>\r\n            <br/>\r\n            <form className=\"card-body container\" method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label for='email'>Email</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Email ID' \r\n                    type='email'\r\n                    name='email'\r\n                    autocomplete=\"on\"\r\n                    value={email}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='password'>Password</label>\r\n                    <input type='password' \r\n                    className='form-control' \r\n                    placeholder='Your password' \r\n                    name='password'\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <button type='submit' className='btn btn-success' title='Login to SafeTrees'>Login</button>\r\n                <br/>\r\n            </form>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n                <small>Don't have an account? <Link to='/signup'>Sign up!</Link></small>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    // <div id=\"card\">\r\n    //     <div id=\"card-content\">\r\n    //         <div id=\"card-title\">\r\n    //         <i class=\"fas fa-tree\"></i>\r\n    //             <h3>SafeTree First LOGIN</h3>\r\n    //             <div class=\"underline-title\"></div>\r\n    //         </div>\r\n    //         <div>\r\n    //             <form method=\"post\" class=\"form\" onSubmit={e => onSubmit(e)}>\r\n    //             <label for=\"email\" style={{\"padding-top\":\"10px\"}}>&nbsp;Email</label>\r\n    //                 <input\r\n    //                     class='form-content'\r\n    //                     \r\n    //                 />\r\n    //                 <div class='form-border'></div>\r\n    //                     <label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Password</label>\r\n    //                         <input\r\n    //                             class=\"form-content\"\r\n    //                             id=\"password\"\r\n    //                             \r\n    //                         />\r\n    //                     <div class='form-border'></div>\r\n    //                     <a href=\"#\"></a>\r\n    //                     <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Login</button>\r\n    //                     <br></br>\r\n    //                     <a><Link to='/reset-password'><legend id=\"forgot-pass\">Reset Password</legend></Link></a>\r\n    //                     <br></br>\r\n    //                     <p></p>\r\n    //                     <Link to='/signup'>Sign Up</Link>\r\n    //             </form>\r\n    //         </div>          \r\n    //     </div>\r\n    // </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport login from './Login';\r\nimport '../assets/home.css';\r\n\r\nconst Home = () => (\r\n    <html>\r\n        <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta http-equiv=\"X-UA-Compatible\"/>\r\n        <title>Card</title>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        </head>\r\n        <div class=\"container mt-5 col-lg-4 col-md-5 col-sm-12 p-4 shadow-lg bg-white\" style={{borderRadius:'17px'}}>\r\n        <h1 class=\"display-4\">SafeTree First</h1>\r\n        <p class=\"lead\">Welcome to SafeTree First Blog!</p>\r\n        <br></br>\r\n        <hr class=\"mt-4\"/>\r\n        <p>If you are an employee and/or Administator, Please login using the Login button!</p>\r\n        <Link class=\"btn btn-primary btn-sm\" to=\"/login\" role=\"button\">Login</Link>\r\n        <p>If you're just here to visit and explore on Environment awareness programmes, surveys, click the following button</p>\r\n        <Link class=\"btn btn-primary btn-sm\" href=\"#\" role=\"button\">Blog Posts</Link>\r\n        </div>\r\n    </html>\r\n        );\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    \r\n    const [formData, setFormData] = useState({\r\n        first_name:'',\r\n        last_name:'',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password){\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n    if(accountCreated){\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='card container mt-5 col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5\" style={{color: 'darkgreen'}} />\r\n            </div>\r\n            <br/>\r\n            <form className=\"card-body container\" method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label for='first_name'>First Name</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your First Name' \r\n                    type='text'\r\n                    name='first_name'\r\n                    value={first_name}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='last_name'>Email</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Last Name' \r\n                    type='text'\r\n                    name='last_name'\r\n                    value={last_name}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='email'>Email</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Email ID' \r\n                    type='email'\r\n                    name='email'\r\n                    autocomplete=\"on\"\r\n                    value={email}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='password'>Password</label>\r\n                    <input type='password' \r\n                    className='form-control' \r\n                    placeholder='Your password' \r\n                    name='password'\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='re_password'>Confirm Your Password</label>\r\n                    <input type='re_password' \r\n                    className='form-control' \r\n                    placeholder='Confirm Your password' \r\n                    name='re_password'\r\n                    value={re_password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <button type='submit' className='btn btn-success' title='Login to SafeTrees'>Register</button>\r\n                <br/>\r\n            </form>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n                <small>Already have an account? <Link to='/login'>Login</Link></small>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n\r\n    if(verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='card container mt-5 col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5\" style={{color: 'darkgreen'}} />\r\n            </div>\r\n            <br/>\r\n            <div className= 'd-flex flex-column justify-content-center align-items-center' style={{marginTop: '200px'}}></div>\r\n            <button \r\n                onClick={verify_account}\r\n                style={{ marginTop:\"50px\" }}\r\n                type='button'\r\n                className='btn btn-success'\r\n                >verify\r\n            </button>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n    <div class=\"resetpass\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n            <i class=\"fas fa-tree\"></i>\r\n                \r\n            </div>\r\n            <h3>Request Password Reset</h3>\r\n            <div>\r\n                <form method=\"post\" class=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"email\" style={{\"padding-top\":\"10px\"}}>&nbsp;Enter your Email Address</label></legend>\r\n                    <input\r\n                        class='form-content'\r\n                        id=\"email\"\r\n                        type='email'\r\n                        name='email'\r\n                        placeholder=\"Email\"\r\n                        autocomplete=\"on\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: '',\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n    <div class=\"resetpassconf\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n            <i class=\"fas fa-tree\"></i>\r\n                \r\n            </div>\r\n            <div>\r\n                <form method=\"post\" class=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Enter New Password</label></legend>\r\n                            <input\r\n                                class=\"form-content\"\r\n                                id=\"password\"\r\n                                type='password'\r\n                                placeholder=\"New Password\"\r\n                                name='new_password'\r\n                                value={new_password}\r\n                                onChange={e => onChange(e)}\r\n                                minLength='6'\r\n                                required\r\n                            />\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Confirm Your Password</label></legend>\r\n                    <input\r\n                        class=\"form-content\"\r\n                        id=\"password\"\r\n                        type='password'\r\n                        placeholder=\"Confirm New Password\"\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/navbar.css';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/login\">Login/Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#!\" onClick={logout}>Logout</a>\r\n        </li>\r\n\r\n    );\r\n\r\n\r\nreturn (\r\n    <>\r\n    <body>\r\n    <div className=\"container-fluid m-0 p-0\">\r\n        <nav class=\"navbar navbar-expand-xl navbar-dark\" id=\"nav-colors\">\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to=\"/\">SafeTree First<span class=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n            {isAuthenticated ?  authLinks() : guestLinks()}\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                Dropdown\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                </div>\r\n                \r\n            </li>\r\n            </ul>\r\n            <a class=\"nav-link\" href=\"#!\" onClick={logout}>Logout</a>\r\n            <form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n            \r\n        </div>\r\n        </nav>\r\n        </div>\r\n        </body>\r\n    </>\r\n)\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, {useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport '../assets/login.css'\r\nconst TestingContainer =({ reset_password_confirm})=>{\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: '',\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = 'asd'\r\n        const token = 'asd';\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n    return(\r\n        <div class=\"resetpassconf\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n            <i class=\"fas fa-tree\"></i>\r\n                \r\n            </div>\r\n            <div>\r\n                <form method=\"post\" class=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Enter New Password</label></legend>\r\n                            <input\r\n                                class=\"form-content\"\r\n                                id=\"password\"\r\n                                type='password'\r\n                                placeholder=\"New Password\"\r\n                                name='new_password'\r\n                                value={new_password}\r\n                                onChange={e => onChange(e)}\r\n                                minLength='6'\r\n                                required\r\n                            />\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Confirm Your Password</label></legend>\r\n                    <input\r\n                        class=\"form-content\"\r\n                        id=\"password\"\r\n                        type='password'\r\n                        placeholder=\"Confirm New Password\"\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(TestingContainer);","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar />\r\n            <section style={{margin:'0px', padding:'0px'}} className='main'>\r\n            {props.children}\r\n            </section>\r\n        </div>\r\n        );\r\n}\r\nexport default connect(null, { checkAuthenticated, load_user }) (Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    LOGOUT,\r\n\r\n\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    IsAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        \r\n        case SIGNUP_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                IsAuthenticated: false,\r\n            }\r\n        }\r\n        \r\n        case USER_LOADED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n        localStorage.removeItem('access');\r\n        localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                IsAuthenticated: false,\r\n                user: null\r\n\r\n        }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport TestingContainer from './containers/TestingContainer';\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider, connect } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path = \"/\" component={Home} />\r\n                    <Route exact path = \"/login\" component={Login} />\r\n                    <Route exact path = \"/signup\" component={Signup} />\r\n                    <Route exact path = \"/reset-password\" component={ResetPassword} />\r\n                    {/* <Route exact path = \"/password/reset/confirm/{uid}/{token}\" component={ResetPasswordConfirm} /> */}\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n                    <Route exact path = \"/activate/:uid/:token\" component={Activate} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}