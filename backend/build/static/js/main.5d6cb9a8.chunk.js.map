{"version":3,"sources":["actions/types.js","actions/auth.js","containers/Login.js","containers/Home.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","to","className","onSubmit","preventDefault","placeholder","required","minLength","Home","background","role","href","Signup","Activate","ResetPassword","ResetPasswordConfirm","logout","class","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","aria-haspopup","aria-labelledby","checkAuthenticated","token","code","props","useEffect","children","initialState","access","refresh","IsAuthenticated","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d6cb9a8.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\r\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const facebookAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '' \r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Please Log in to your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='8'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n                <p className='mt-5'>\r\n                Forgot password? <Link to='/reset-password'>Reset Password</Link>\r\n                </p>\r\n                <p className='mt-5'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                </p>\r\n                \r\n            </form>\r\n            \r\n            \r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport login from './Login';\r\n\r\nconst Home = () => (\r\n    <body background=\"src/media/background1.jpg\">\r\n        <div className=\"container mt-5\">\r\n        <h1 className=\"display-4\">SafeTree First</h1>\r\n        <p className=\"lead\">Welcome to SafeTree First Blog!</p>\r\n        <br></br>\r\n        <hr className=\"mt-4\"/>\r\n        <p>If you are an employee and/or Administator, Please login using the Login button!</p>\r\n        <Link className=\"btn btn-primary btn-sm\" to=\"/login\" role=\"button\">Login</Link>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <p>If you're just here to visit and explore on Environment awareness programmes, surveys, click the following button</p>\r\n        <Link className=\"btn btn-primary btn-sm\" href=\"#\" role=\"button\">Blog Posts</Link>\r\n        </div>\r\n    </body>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Signup = () => (\r\n    <div>\r\n        Signup\r\n    </div>\r\n);\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst Activate = () => (\r\n    <div>\r\n        Activate\r\n    </div>\r\n);\r\n\r\nexport default Activate;","import React from 'react';\r\n\r\nconst ResetPassword = () => (\r\n    <div>\r\n        ResetPassword\r\n    </div>\r\n);\r\n\r\nexport default ResetPassword;","import React from 'react';\r\n\r\nconst ResetPasswordConfirm = () => (\r\n    <div>\r\n        ResetPasswordConfirm\r\n    </div>\r\n);\r\n\r\nexport default ResetPasswordConfirm;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/navbar.css';\r\nimport login from '../containers/Login'\r\nimport home from '../containers/Home'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/login\">Login/Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#!\" onClick={logout}>Logout</a>\r\n        </li>\r\n\r\n    );\r\n\r\n\r\nreturn (\r\n    <>\r\n    <body>\r\n    <div className=\"container-fluid m-0 p-0\">\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark\" id=\"nav-colors\">\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to=\"/\">SafeTree First<span class=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n            {isAuthenticated ? guestLinks : authLinks}\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Dropdown\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                </div>\r\n                \r\n            </li>\r\n\r\n            </ul>\r\n            <form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n            \r\n        </div>\r\n        </nav>\r\n        </div>\r\n        </body>\r\n    </>\r\n)\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n        );\r\n}\r\nexport default connect(null, { checkAuthenticated, load_user }) (Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    IsAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        localStorage.removeItem('access');\r\n        localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                IsAuthenticated: false,\r\n                user: null\r\n\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider, connect } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path = \"/\" component={Home} />\r\n                    <Route exact path = \"/login\" component={Login} />\r\n                    <Route exact path = \"/signup\" component={Signup} />\r\n                    <Route exact path = \"/reset-password\" component={ResetPassword} />\r\n                    <Route exact path = \"/password/reset/confirm/{uid}/{token}\" component={ResetPasswordConfirm} />\r\n                    <Route exact path = \"/activate/{uid}/{token}\" component={Activate} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}