{"version":3,"sources":["assets/img/logo.svg","containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/TestingContainer.js","components/Navbar.js","components/BlogContact.js","hocs/Layout.js","components/Blog.js","components/BlogDetail.js","components/Category.js","components/Surveyform.js","assets/img/about.jpg","components/About.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","className","style","borderRadius","href","color","src","logo","width","height","outline","border","backgroundColor","to","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","SURVEYFORM","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","reset_password_confirm","uid","token","new_password","re_new_password","body","JSON","stringify","post","connect","state","isAuthenticated","auth","login","email","password","useState","formData","setFormData","onChange","e","target","name","value","method","onSubmit","preventDefault","htmlfor","placeholder","required","minLength","title","margin","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","for","verify","match","verified","setVerified","marginTop","onClick","params","reset_password","requestSent","setRequestSent","id","Component","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","position","zIndex","getAllByLabelText","checkAuthenticated","code","props","useEffect","padding","children","Blog","posts","setPosts","getPosts","url","console","log","length","map","featured","right","thumbnail","alt","month","day","category","maxHeight","minHeight","overflowX","overflowY","excerpt","BlogDetail","setPost","getSinglePost","window","location","temp","split","post_id","status","item","fontSize","content","Surveyform","areaName","treeName","treeAge","treeImage","treeHealth","treeGirth","treeHeight","treeLocation","surveyDate","handleChange","setState","handleImageChange","files","handleSubmit","form_data","FormData","append","then","catch","err","getLoc","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","accuracy","document","getElementById","String","this","htmlFor","About","backgroundImage","about","backgroundSize","backgroundBlendMode","textWeight","initialState","access","refresh","IsAuthenticated","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","Category","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ccd63978.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0db0b608.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/home.css';\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst Home = () => (\r\n    <>\r\n    <div className=\"container-fluid\">\r\n        <div className=\"my-5 col-sm-12\">\r\n            <div className=\"blog-card shadow-lg\"\r\n            style={{borderRadius:'17px'}}>\r\n                <div className=\"title-content\">\r\n                    <h3><Link href=\"#\" style={{color:\"ButtonHighlight\"}}>Welcome to SafeTree First</Link></h3>\r\n                </div>\r\n                <div className=\"card-info\">\r\n                <img  className=\"img-fluid\" src={logo} style={{width:\"200px\", height:\"30%\"}}/>\r\n                <p style={{color:\"ButtonHighlight\"}}>If you are an employee and/or Administator, Please login using the Login button!</p>\r\n                <Link style={{outline:'none', border:'none', borderRadius:'8px', color:'white', backgroundColor:'darkgreen'}} to=\"/login\">Login</Link>\r\n                <br/>\r\n                <p style={{color:\"ButtonHighlight\"}}>If you're just here to visit and explore on Environment awareness programmes, surveys, click the following button</p>\r\n                <Link style={{outline:'none', border:'none', borderRadius:'8px', color:'white', backgroundColor:'darkgreen'}} to=\"/api/blog/bloglist/\">Blog Posts</Link>\r\n                </div>\r\n                <div className=\"gradient-overlay\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    </>\r\n        );\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\r\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SURVEYFORM = 'SURVEYFORM';\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n    FACEBOOK_AUTH_SUCCESS,\r\n    FACEBOOK_AUTH_FAIL,\r\n    LOGOUT,\r\n    SURVEYFORM\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const facebookAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code && !localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: FACEBOOK_AUTH_FAIL\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n\r\n\r\nexport const surveyform = (areaName, treeName, treeAge, treeImage, treeHealth, treeGirth, treeHeight, treeLocation, surveyDate) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ areaName, treeName, treeAge, treeImage, treeHealth, treeGirth, treeHeight, treeLocation, surveyDate });\r\n    console.log(body)\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/survey/treeSurvey/`, body, config);\r\n        dispatch({\r\n            type: SURVEYFORM,\r\n            payload: res.data\r\n        });\r\n\r\n        // dispatch(load_user());\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport '../assets/login.css'\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '' \r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n        <div className=\"mx-5 my-5\">\r\n        <div className='card container col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <img  className=\"img-fluid\" src={logo} style={{width:\"300px\", height:\"50%\"}}/>\r\n                {/* <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5 hvr-grow-shadow\" style={{color: 'darkgreen'}} /> */}\r\n            </div>\r\n            <br/>\r\n            <form className=\"card-body container\" method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label htmlfor='email'>Email</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Email ID' \r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label htmlfor='password'>Password</label>\r\n                    <input type='password' \r\n                    className='form-control' \r\n                    placeholder='Your password' \r\n                    name='password'\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className=\"text-right\">\r\n                    <button type='submit' className='ml-auto btn btn-success' title='Login to SafeTrees'>LOGIN</button>\r\n                </div>\r\n                <br/>\r\n            </form>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n                <small>Forgot Password? <Link to='/reset-password'>Reset Password</Link></small>\r\n            </div>\r\n            <div className='text-center p-3'>\r\n                <small>Don't have an account? <Link to='/signup'>Sign up!</Link></small>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\nimport '../assets/login.css'\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    \r\n    const [formData, setFormData] = useState({\r\n        first_name:'',\r\n        last_name:'',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password){\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n    if(accountCreated){\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return(\r\n        <div className=\"mx-5 my-5\">\r\n        <div className='card container mt-5 col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <img className=\"img-fluid\" src={logo} style={{width:\"300px\", height:\"50%\"}} />\r\n            </div>\r\n            <br/>\r\n            <form className=\"card-body container\" method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label for='first_name'>First Name</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your First Name' \r\n                    type='text'\r\n                    name='first_name'\r\n                    value={first_name}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='last_name'>Last Name</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Last Name' \r\n                    type='text'\r\n                    name='last_name'\r\n                    value={last_name}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label htmlfor='email'>Email</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Your Email ID' \r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={e => onChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='password'>Password</label>\r\n                    <input type='password' \r\n                    className='form-control' \r\n                    placeholder='Your password' \r\n                    name='password'\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label for='re_password'>Confirm password</label>\r\n                    <input type='password' \r\n                    className='form-control' \r\n                    placeholder='Confirm password' \r\n                    name='re_password'\r\n                    value={re_password}\r\n                    onChange={e => onChange(e)}\r\n                    minLength='6'\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <button type='submit' className='btn btn-success align-items-center' title='Login to SafeTrees'>Register</button>\r\n                <br/>\r\n            </form>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n                <small>Already have an account? <Link to='/login'>Login</Link></small>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\nimport '../assets/login.css'\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n\r\n    if(verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='card container mt-5 col-lg-4 col-md-4 col-sm-12 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n            <div className=\"container text-center\">\r\n                <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5\" style={{color: 'darkgreen'}} />\r\n            </div>\r\n            <br/>\r\n            <div className= 'd-flex flex-column justify-content-center align-items-center' style={{marginTop: '200px'}}></div>\r\n            <button \r\n                onClick={verify_account}\r\n                style={{ marginTop:\"50px\" }}\r\n                type='button'\r\n                className='btn btn-success'\r\n                >verify\r\n            </button>\r\n            <hr style={{ width:\"50%\", margin:'0 auto', backgroundColor:'green' }}/>\r\n            <div className='text-center p-3'>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\nimport '../assets/login.css'\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n    <div className=\"resetpass\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n                <img className=\"img-fluid\" src={logo} style={{ width:\"200px\", height:\"25%\"}}/>\r\n            </div>\r\n            <h3>Request Password Reset</h3>\r\n            <div>\r\n                <form method=\"post\" className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"email\" style={{\"padding-top\":\"10px\"}}>&nbsp;Enter your Email Address</label></legend>\r\n                    <input\r\n                        className='form-content'\r\n                        id=\"email\"\r\n                        type='email'\r\n                        name='email'\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport '../assets/login.css'\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: '',\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n\r\n    <div className=\"resetpassconf\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n            <img className=\"img-fluid\" src={logo}  style={{width:\"300px\", height:\"50%\"}} />\r\n                \r\n            </div>\r\n            <div>\r\n                <form method=\"post\" className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Enter New Password</label></legend>\r\n                            <input\r\n                                className=\"form-content\"\r\n                                id=\"password\"\r\n                                type='password'\r\n                                placeholder=\"New Password\"\r\n                                name='new_password'\r\n                                value={new_password}\r\n                                onChange={e => onChange(e)}\r\n                                minLength='6'\r\n                                required\r\n                            />\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Confirm Your Password</label></legend>\r\n                    <input\r\n                        className=\"form-content\"\r\n                        id=\"password\"\r\n                        type='password'\r\n                        placeholder=\"Confirm New Password\"\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, {useState} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport '../assets/login.css'\r\nconst TestingContainer =({ reset_password_confirm})=>{\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: '',\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = 'asd'\r\n        const token = 'asd';\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n\r\n    // if user authenticated\r\n    // Redirect to Home page\r\n    if(requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n    return(\r\n        <div className=\"resetpassconf\">\r\n        <div id=\"card-content\">\r\n            <div id=\"card-title\">\r\n            <i className=\"fas fa-tree\"></i>\r\n                \r\n            </div>\r\n            <div>\r\n                <form method=\"post\" className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Enter New Password</label></legend>\r\n                            <input\r\n                                className=\"form-content\"\r\n                                id=\"password\"\r\n                                type='password'\r\n                                placeholder=\"New Password\"\r\n                                name='new_password'\r\n                                value={new_password}\r\n                                onChange={e => onChange(e)}\r\n                                minLength='6'\r\n                                required\r\n                            />\r\n                <legend><label for=\"password\" style={{\"padding-top\":\"40px\"}}>&nbsp;Confirm Your Password</label></legend>\r\n                    <input\r\n                        className=\"form-content\"\r\n                        id=\"password\"\r\n                        type='password'\r\n                        placeholder=\"Confirm New Password\"\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                <button id=\"submit-btn\" className='btn btn-primary' type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>          \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(TestingContainer);","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport '../assets/navbar.css';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\nimport { getAllByLabelText } from '@testing-library/dom';\r\nimport logo from '../assets/img/logo.svg';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link hvr-glow active\" to=\"/login\" style={{borderRadius:\"15px\"}}>Login/Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link hvr-glow active\" href=\"#!\" onClick={logout} style={{borderRadius:\"15px\"}}>Logout</a>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n\r\nreturn (\r\n    <>\r\n    <span></span>\r\n    <div className=\"container-fluid m-0 p-0\">\r\n        <nav className=\"navbar navbar-expand-xl navbar-dark m-30 p-10 clearfix\" id=\"nav-colors\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\" style={{position:\"relative\", zIndex:'99'}}>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link hvr-glow\" to=\"/\"><img src={logo} style={{ width:\"50px\", height:\"25px\"}}/></Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link hvr-glow mr-5\" to=\"/api/blog/about\" style={{borderRadius:\"15px\"}}> \r\n                About Us <span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            <br/>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link hvr-glow mr-5\" \r\n                to=\"/api/survey/treedatasurvey/\" style={{borderRadius:\"15px\"}}>\r\n                Surveys\r\n                <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item active\">\r\n                <Link className=\"nav-link hvr-glow mr-5\" to=\"/api/posts/\" style={{borderRadius:\"15px\"}}> \r\n                Blog <span className=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            {/* <li className=\"nav-item active\">\r\n                <Link to='/api/blog/contact' className=\"nav-link hvr-glow mr-5\" href=\"#\" style={{borderRadius:\"15px\"}}>\r\n                Contact Us</Link>\r\n            </li> */}\r\n            {isAuthenticated ?  authLinks() : guestLinks()}\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-md-2 active mr-5\" type=\"search\" placeholder=\"Search\" style={{borderRadius:\"15px\"}} aria-label=\"Search\"></input>\r\n            <button className=\"hvr-glow btn btn-outline-success\" style={{borderRadius:\"15px\"}} type=\"submit\"><label getAllByLabelText>Search</label></button>\r\n            </form>\r\n            \r\n        </div>\r\n        </nav>\r\n        </div>\r\n    </>\r\n)\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass BlogContact extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      subject: '',\r\n      message: '',\r\n      mobile: '',\r\n    }\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    axios({\r\n\r\n      method: \"POST\",\r\n      url:`${process.env.REACT_APP_API_URL}/auth/api/contact/`,\r\n      data:  this.state\r\n    }).then((response)=>{\r\n        console.log(response.data)\r\n      if (response.data.status === 'success') {\r\n        alert(\"Message Sent.\");\r\n        this.resetForm()\r\n        \r\n      } else if (response.data.status === 'fail') {\r\n        alert(\"Message failed to send.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({ name: '', email: '', message: '', subject: '', mobile: '' })\r\n  }\r\n    render() {\r\n        return(\r\n    \r\n    <div className=\"container-fluid\">\r\n            <div className=\"container col-md-8 col-lg-8 mt-5\" style={{ borderRadius:\"25px\",\r\n            height: \"800px\",\r\n            backgroundSize: \"100%\",\r\n            backgroundColor: \"rgba(246, 246, 246, 1)\"}}>\r\n                <div className='text-center'>\r\n                <h1 className=\"text-center\" style={{ marginRight:\"10px\", color:'#111', border:'none', padding:'0px'}}>Contact Us</h1>\r\n                <h3>Please enter the information</h3>\r\n                </div>\r\n                <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Subject\">Subject</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Mobile Number</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea className=\"form-control\" rows=\"5\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"ml-auto btn btn-primary\" style={{margin:'0 auto'}}>Submit</button>\r\n                </form>\r\n        </div>    \r\n    </div>  \r\n\r\n\r\n)};\r\n\r\nonNameChange(event) {\r\n  this.setState({name: event.target.value})\r\n}\r\n\r\nonEmailChange(event) {\r\n  this.setState({email: event.target.value})\r\n}\r\n\r\nonSubjectChange(event) {\r\n  this.setState({subject: event.target.value})\r\n}\r\n\r\nonMobileChange(event) {\r\n    this.setState({mobile: event.target.value})\r\n}\r\n\r\nonMessageChange(event) {\r\n    this.setState({message: event.target.value})\r\n}\r\n};\r\n\r\nexport default BlogContact;","import React, { useEffect } from 'react';\r\nimport '../assets/hover.css';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Navbar />\r\n            <section style={{margin:'0px', padding:'0px'}} className='main'>\r\n            {props.children}\r\n            </section>\r\n        </div>\r\n        );\r\n}\r\nexport default connect(null, { checkAuthenticated, load_user }) (Layout);","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/blog.css';\r\nimport axios from 'axios';\r\n\r\nconst Blog = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = async()=>{\r\n        const url = `${process.env.REACT_APP_API_URL}/api/blog/bloglist/`\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.get(url,config);\r\n            console.log(res.data)\r\n            const postList = setPosts(res.data);\r\n            if(postList){\r\n                return(200);\r\n            }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getPosts();\r\n        console.log(posts)\r\n        return;\r\n      },[])\r\n    \r\n    return(\r\n    <div className=\"container mt-5\">\r\n        {/* <div className=\"nav-scroller py-1 mb-2\">\r\n            <nav className=\"nav d-flex justify-content-between\">\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/world\">WORLD</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/environment\">ENVIRONMENT</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/trees\">TREES</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/climate\">CLIMATE</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/surveys\">SURVEYS</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/drives\">DRIVES</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/forestation\">FORESTATION</Link>\r\n                <Link className=\"p-2\" style={{color:\"white\"}} to=\"/categories/diy\">DIY</Link>\r\n            </nav>\r\n        </div> */}\r\n\r\n        <div className=\"row my-5\">\r\n        {\r\n            posts.length > 0 ?\r\n            posts.map((post,id) => (\r\n                \r\n                \r\n                <>\r\n                <div key={id} className=\"col-sm-12 col-md-4 col-lg-4 mt-3\" >\r\n                    <div className=\"card bloglist shadow-lg p-3\" style={{borderRadius:'10px', position:'relative'}}>\r\n                        {   \r\n                            post.featured ?\r\n                            <div style={{position: 'absolute', right:'0px'}}>\r\n                            </div>  : ''\r\n                        }\r\n                        <div className=\"bg-white\">\r\n                        <img className=\"card-img-top\" style={{height: '200px', width:'100%'}} src={post.thumbnail} alt={post.title} />\r\n                        <h5 className=\"card-header\" style={{color: \"darkolivegreen\", border:'none', padding:'0px'}}>{post.title}</h5>\r\n                        <small className=\"text-muted text-capitalize\">{post.month}, {post.day}</small>\r\n                        <br/>\r\n                        {/* <small className=\"w-20 bg-white text-capitalize p-3 text-center border border-success\" style={{borderRadius:\"17px\"}}>{post.category}</small>\r\n                        <br/> */}\r\n                        <small className=\"text-capitalize\" style={{color:\"darkgreen\"}}>{post.category}</small>\r\n                        <br/>\r\n                        <div className=\"card-body p-1\" style={{maxHeight:'100px', minHeight:'100px', overflowX:\"scroll\", overflowY:'scroll'}}>\r\n                            <h6>{post.excerpt}</h6>\r\n                        </div>\r\n                        <Link to={`/post/${post.id}`} className=\"stretched-link\">Continue reading</Link>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </>\r\n     \r\n            )):(\r\n                <h1>LOADING</h1>\r\n            )\r\n        }\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Blog;","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../assets/blog.css\";\r\n\r\nconst BlogDetail = () => {\r\n\r\n    const [post, setPost] = useState([]);\r\n    const getSinglePost = async () =>{\r\n        console.log(window.location.href)    \r\n        var temp = window.location.href.split('/')\r\n        var post_id = temp[temp.length-1]\r\n        console.log(post_id)\r\n        const url = '${process.env.REACT_APP_API_URL}/api/blog/category/'\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': '0&'+post_id\r\n            }\r\n        }\r\n        const res = await axios.get(url, config);\r\n        console.log(res.data)\r\n        if(res.status === 200){\r\n            setPost(res.data)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getSinglePost();\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"container-fluid col-md-9 text-center\" style={{position:\"relative\", width:\"100%\", height:\"100%\", backgroundColor:\"transparent\"}}>\r\n            <div className=\"blogpage card mx-5 my-5\" style={{borderRadius:'4px',\r\n            maxHeight:'600px', minHeight:'300px', overflowX:\"scroll\", overflowY:'scroll'}}>\r\n            {\r\n                post.length>0 ? \r\n                post.map((item, id)=>(\r\n                    <div key={id}>\r\n                    <h1 style={{color:\"whitesmoke\"}}>{item.title}</h1>\r\n                    <img src={`${process.env.REACT_APP_API_URL}/${item.thumbnail}`} alt={item.title} style={{width:\"50%\", height:\"30%\", borderRadius:\"7px\"}}/>\r\n                    <br/>\r\n                    <h3 style={{borderRadius:\"7px\", color:\"whitesmoke\"}}>{item.excerpt}</h3>\r\n                        <br/>\r\n                        <h2 className=\"w-20 bg-white text-capitalize p-3\" style={{color:\"whitesmoke\"}}>{item.category}</h2>\r\n                        <br/>\r\n                        <small className=\"text-capitalize\" style={{color:\"whitesmoke\", fontSize:\"25px\"}}>{item.content}</small>\r\n                        <br/>\r\n                        <div className=\"card-body p-1\" style={{maxHeight:'100px', minHeight:'100px', overflowX:\"scroll\", overflowY:'scroll'}}>\r\n                        <big className=\"text-muted text-capitalize\">Posted On: {item.month}, {item.day}</big>\r\n                        </div>\r\n                    </div>\r\n                )):'No Such Post'\r\n            }    \r\n            </div>        \r\n        </div>\r\n        </>\r\n        \r\n        )\r\n};\r\n\r\nexport default BlogDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst category = () => (\r\n    <div className=\"container mt-5 col-lg-4 col-md-5 col-sm-12 p-4 shadow-lg bg-white\" style={{borderRadius:'17px'}}>\r\n        Category\r\n    </div>\r\n    );\r\n\r\nexport default category;","import React, { Component } from 'react';\r\nimport { Link, render } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { surveyform } from '../actions/auth';\r\nimport '../assets/home.css';\r\nimport logo from '../assets/img/logo.svg';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Surveyform extends Component{\r\n\r\n    state = {\r\n        areaName: '',\r\n        treeName: '',\r\n        treeAge: '',\r\n        treeImage: null,\r\n        treeHealth: '',\r\n        treeGirth: '',\r\n        treeHeight: '',\r\n        treeLocation: '',\r\n        surveyDate: ''\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            treeImage: e.target.files[0]\r\n        })\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        let form_data = new FormData();\r\n        form_data.append('areaName', this.state.areaName);\r\n        form_data.append('treeName', this.state.treeName);\r\n        form_data.append('treeAge', this.state.treeAge);\r\n        form_data.append('treeImage', this.state.treeImage, this.state.treeImage.name);\r\n        form_data.append('treeHealth', this.state.treeHealth);\r\n        form_data.append('treeGirth', this.state.treeGirth);\r\n        form_data.append('treeHeight', this.state.treeHeight);\r\n        form_data.append('treeLocation', this.state.treeLocation);\r\n        form_data.append('surveyDate', this.state.surveyDate);\r\n        let url = '${process.env.REACT_APP_API_URL}/api/survey/treedatasurvey/';\r\n        \r\n        axios.post(url, form_data, {\r\n            headers:{\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n\r\n    };\r\n\r\n        getLoc = () =>{\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                console.log(\"Latitude is :\", position.coords.latitude);\r\n                console.log(\"Longitude is :\", position.coords.longitude);\r\n                console.log(\"More or less\", position.coords.accuracy);\r\n                document.getElementById('treeLocation').value = String(position.coords.latitude)+\",\"+String(position.coords.longitude)\r\n            }); \r\n        };         \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n    <>\r\n    <div className=\"mx-5 my-5\">\r\n        <div className='card container col-lg-4 col-md-4 col-sm-12 my-5 p-4 shadow-lg bg-white' style={{borderRadius:'4px',\r\n            maxHeight:'600px', minHeight:'300px', overflowX:\"scroll\", overflowY:'scroll'}}>\r\n            <div className=\"container text-center\">\r\n                <img className=\"img-fluid\" src={logo} style={{width:\"300px\", height:\"50%\"}} />\r\n            </div>\r\n            <br/>\r\n            <form onSubmit={this.handleSubmit} \r\n            className=\"card-body container\">\r\n                <div className='form-group'>\r\n                    <label htmlFor='areaName'>Area Name</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Area Name' \r\n                    id='areaName'\r\n                    type='text'\r\n                    name='areaName'\r\n                    value={this.state.areaName}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeName'>Tree Name</label>\r\n                    <input type='text' \r\n                    className='form-control' \r\n                    placeholder='Tree Name'\r\n                    id='treeName' \r\n                    name='treeName'\r\n                    value={this.state.treeName}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeAge'>Tree Age</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Age'\r\n                    id='treeAge'\r\n                    type='text'\r\n                    name='treeAge'\r\n                    value={this.state.treeAge}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeImage'>Iree Image</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Image' \r\n                    type='file'\r\n                    id='treeImage'\r\n                    name='treeImage'\r\n                    onChange={this.handleImageChange}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeHealth'>Tree Health</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Health' \r\n                    type='text'\r\n                    name='treeHealth'\r\n                    id='treeHealth'\r\n                    value={this.state.treeHealth}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeGirth'>Tree Girth</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Girth' \r\n                    type='text'\r\n                    id='treeGirth'\r\n                    name='treeGirth'\r\n                    value={this.state.treeGirth}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeHeight'>Tree Height</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Height' \r\n                    type='text'\r\n                    id='treeHeight'\r\n                    name='treeHeight'\r\n                    value={this.state.treeHeight}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='treeLocation'>Tree Location</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Tree Location' \r\n                    type='text'\r\n                    name='treeLocation'\r\n                    id=\"treeLocation\"\r\n                    value={this.state.treeLocation}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                    <button className=\"btn btn-success\" \r\n                    onClick={this.getLoc}\r\n                    >Get Location</button>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='surveyDate'>Survey Date</label>\r\n                    <input className=\"form-control\" \r\n                    placeholder='Survey Date' \r\n                    type='date'\r\n                    id='surveyDate'\r\n                    name='surveyDate'\r\n                    value={this.state.surveyDate}\r\n                    onChange={e => this.handleChange(e)}\r\n                    required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className=\"text-right\">\r\n                    <button type='submit' className='ml-auto btn btn-success' title='Login to SafeTrees'>Submit</button>\r\n                </div>\r\n                <br/>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    </>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n//  method=\"POST\" onSubmit={e => onSubmit(e)}\r\n// method=\"post\" action=\"post\"\r\n\r\n// const Surveyform = ({ surveyform }) => {\r\n//     const [formData, setFormData] = useState({\r\n//         areaName: '',\r\n//         treeName: '',\r\n//         treeAge: '',\r\n//         treeImage: '',\r\n//         treeHealth: '',\r\n//         treeGirth: '',\r\n//         treeHeight: '',\r\n//         treeLocation: '',\r\n//         surveyDate: '',\r\n//     });\r\n\r\n//     const { areaName, treeName, treeAge, treeImage, treeHealth, treeGirth, treeHeight, treeLocation, surveyDate } = formData;\r\n\r\n//     const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//     const onSubmit = e => {\r\n\r\n//         const url = `${process.env.REACT_APP_API_URL}/api/survey/treesurvey`\r\n//         const config = {\r\n//             headers:{\r\n//                 'Content-Type':'multipart/form-data',\r\n//                 'Authorization': 1\r\n//             }\r\n//         }\r\n//         surveyform(areaName, treeName, treeAge, treeImage, treeHealth, treeGirth, treeHeight, treeLocation, surveyDate);\r\n        \r\n        \r\n//         const res = axios.post(url, setFormData, config)\r\n//         e.preventDefault();\r\n//     };\r\n\r\n//     // class App extends Component {\r\n//     // constructor(props) {\r\n//     //     super(props);\r\n//     //     this.state = {\r\n//     //     };\r\n//     // }\r\n\r\n//     // componentDidMount() {\r\n//     //     navigator.geolocation.getCurrentPosition(function(position) {\r\n//     //     console.log(\"Latitude is :\", position.coords.latitude);\r\n//     //     console.log(\"Longitude is :\", position.coords.longitude);\r\n//     //     });\r\n//     // };\r\n\r\n//     // render() {\r\n//     //     return (\r\n//     //     <div>\r\n//     //         <h4>Using geolocation JavaScript API in React</h4>\r\n//     //     </div>\r\n//     //     );\r\n//     // }\r\n//     // }\r\n\r\n//     // render(<App />, document.getElementById(\"root\"));\r\n//     const getLoc = () =>{\r\n//         navigator.geolocation.getCurrentPosition(function(position) {\r\n//             console.log(\"Latitude is :\", position.coords.latitude);\r\n//             console.log(\"Longitude is :\", position.coords.longitude);\r\n//             document.getElementById('treeLocation').value = String(position.coords.latitude)+\",\"+String(position.coords.longitude)\r\n//         }); \r\n//     }\r\n\r\n    \r\n\r\n//     useEffect(()=>{\r\n//         getLoc()\r\n//     }, [])\r\n\r\n\r\n// return(\r\n    \r\n//     <>\r\n//     <div className=\"mx-5 my-5\">\r\n//         <div className='card container col-lg-4 col-md-4 col-sm-12 my-5 p-4 shadow-lg bg-white' style={{borderRadius:'17px'}}>\r\n//             <div className=\"container text-center\">\r\n//                 <i className=\"fas fa-tree fa-3x border border-success rounded-circle p-5 hvr-grow-shadow\" style={{color: 'darkgreen'}} />\r\n//             </div>\r\n//             <br/>\r\n//             <form method=\"post\" action=\"post\"\r\n//             className=\"card-body container\" method=\"POST\" onSubmit={e => onSubmit(e)}>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='areaName'>Area Name</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Area Name' \r\n//                     type='text'\r\n//                     name='areaName'\r\n//                     value={areaName}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <br/>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeName'>Tree Name</label>\r\n//                     <input type='text' \r\n//                     className='form-control' \r\n//                     placeholder='Tree Name' \r\n//                     name='treeName'\r\n//                     value={treeName}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeAge'>Tree Age</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Age' \r\n//                     type='text'\r\n//                     name='treeAge'\r\n//                     value={treeAge}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeImage'>Iree Image</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Image' \r\n//                     type='file'\r\n//                     name='treeImage'\r\n//                     value={treeImage}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeHealth'>Tree Health</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Health' \r\n//                     type='text'\r\n//                     name='treeHealth'\r\n//                     value={treeHealth}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeGirth'>Tree Girth</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Girth' \r\n//                     type='text'\r\n//                     name='treeGirth'\r\n//                     value={treeGirth}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeHeight'>Tree Height</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Height' \r\n//                     type='text'\r\n//                     name='treeHeight'\r\n//                     value={treeHeight}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='treeLocation'>Tree Location</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Tree Location' \r\n//                     type='text'\r\n//                     name='treeLocation'\r\n//                     id=\"treeLocation\"\r\n//                     value={treeLocation}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <div className='form-group'>\r\n//                     <label htmlFor='surveyDate'>Survey Date</label>\r\n//                     <input className=\"form-control\" \r\n//                     placeholder='Survey Date' \r\n//                     type='text'\r\n//                     name='surveyDate'\r\n//                     value={surveyDate}\r\n//                     onChange={e => onChange(e)}\r\n//                     required\r\n//                     />\r\n//                 </div>\r\n//                 <br/>\r\n//                 <div className=\"text-right\">\r\n//                     <button type='submit' className='ml-auto btn btn-success' title='Login to SafeTrees'>Submit</button>\r\n//                 </div>\r\n//                 <br/>\r\n//             </form>\r\n//         </div>\r\n//         </div>\r\n//     </>\r\n//     );\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n// });\r\n\r\n// export default Surveyform(null, { surveyform })(Surveyform);\r\n\r\n\r\n// export default connect(mapStateToProps, null)(Surveyform);\r\nexport default Surveyform;","export default __webpack_public_path__ + \"static/media/about.99c19bd4.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../assets/img/logo.svg';\r\nimport about from '../assets/img/about.jpg';\r\n\r\nconst About = () => (\r\n\r\n    <div className=\"container col-md-9 text-center aboutpage\" style={{position:\"relative\", backgroundImage:{about}, \r\n    borderRadius:\"7px\",\r\n    backgroundSize:\"cover\"}}>\r\n    <div className=\"mx-5 my-5\">\r\n            <div>\r\n            <h1 style={{color:\"whitesmoke\"}}>About SafeTree First</h1>\r\n            <div>\r\n            <img className=\"img-fluid\" src={logo} style={{backgroundBlendMode:\"hard-light\"}} alt=\"item.title\" style={{width:\"30%\", height:\"30%\", borderRadius:\"7px\"}}/>\r\n            </div>\r\n            <br/>\r\n            <h2 style={{borderRadius:\"7px\", color:\"whitesmoke\"}}>Who are we?</h2>\r\n            <medium style={{color:\"whitesmoke\", textWeight:\"500\"}}>\r\n                We are an organization working towards the betterment of our environment. With this goal in our mind, we are working towards\r\n                the mission of saving trees, the life and companion of our planet and it's fullfilling nature. We help Government organizations,\r\n                privatized corporations with our extensive and experienced team in conducting surveys, carrying out plantation drives, cleanup drives,\r\n                etc. The Purpose of our organization is to mainly maintain the flora and fauna of the surrounding environment. In collaboration with\r\n                other organizations, we are planning to take up forest maintainence, tree transplantations, uprooting critical conditioned trees, \r\n                and saving them for a greener, healthier environment.\r\n            </medium>\r\n                <br/>\r\n                <div>\r\n                <big className=\"text-capitalize\" style={{borderRadius:\"7px\", color:\"whitesmoke\"}}>Head over to the blog section to read our blogs</big>\r\n                </div>\r\n            </div>\r\n            </div>        \r\n        </div>\r\n);\r\n\r\nexport default About;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    LOGOUT,\r\n    SURVEYFORM\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    IsAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        \r\n        case SIGNUP_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                IsAuthenticated: false,\r\n            }\r\n        }\r\n        \r\n        case USER_LOADED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                IsAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n        localStorage.removeItem('access');\r\n        localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                IsAuthenticated: false,\r\n                user: null\r\n\r\n        }\r\n\r\n        case SURVEYFORM:\r\n            return {\r\n                ...state,\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n\r\n        \r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport TestingContainer from './containers/TestingContainer';\r\nimport BlogContact from './components/BlogContact';\r\nimport Layout from './hocs/Layout';\r\nimport Blog from './components/Blog';\r\nimport BlogDetail from './components/BlogDetail';\r\nimport Category from './components/Category';\r\nimport Surveyform from './components/Surveyform';\r\nimport About from './components/About';\r\n\r\nimport { Provider, connect } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path = \"/\" component={Home} />\r\n                    <Route exact path = \"/login\" component={Login} />\r\n                    <Route exact path = \"/signup\" component={Signup} />\r\n                    <Route exact path = \"/reset-password\" component={ResetPassword} />\r\n                    <Route exact path = \"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n                    <Route exact path = \"/activate/:uid/:token\" component={Activate} />\r\n                    <Route exact path = \"/api/blog/about\" component={About} />\r\n                    <Route exact path = \"/api/blog/category\" component={Category} />\r\n                    {/* <Route exact path = \"/api/contact\" component={BlogContact} /> */}\r\n                    <Route exact path = \"/api/category/:id\" component={Category} />\r\n                    <Route exact path = \"/api/posts/\" component={Blog} />\r\n                    <Route exact path = \"/api/survey/treedatasurvey/\" component={Surveyform} />\r\n                    <Route exact path = \"/post/:id\" component={BlogDetail} />\r\n                    \r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}